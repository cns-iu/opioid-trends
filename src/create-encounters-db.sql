-- Load Source Database --

ATTACH DATABASE 'raw-data/original/box-health/R2767_Data.db' AS src;
-- ATTACH DATABASE ':memory:' AS src;
-- .restore 'src' 'raw-data/original/box-health/R2767_Data.db';


-- (O)pioid related events --

-- DROP TABLE IF EXISTS "ENCOUNTER_CATEGORY_COUNT";
-- CREATE TABLE "ENCOUNTER_CATEGORY_COUNT" AS
--     SELECT DISTINCT
--         CARE_SETTING_CATEGORY AS CARE_TYPE,
--         COUNT(ENCOUNTER_ID) AS ENCOUNTER_COUNT,
--         COUNT(CARE_SETTING_CATEGORY) AS CATEGORY_COUNT,
--         CATEGORY_COUNT / ENCOUNTER_COUNT AS CATEGORY_PERCENT
--     FROM src.ENCOUNTERS
--     GROUP BY CARE_SETTING_CATEGORY
--     ORDER BY CATEGORY_PERCENT;

-- DROP TABLE IF EXISTS "EMERGENCY_CATEGORY_PERCENT";
-- CREATE TABLE "ENCOUNTER_CATEGORY_PERCENTS"
--     SELECT
--         STUDY_ID,
--         COUNT(ENCOUNTER_ID) AS ENCOUNTER_COUNT,

--     WHERE
--         ENCOUNTER_ID IS 'E'

DROP TABLE IF EXISTS "ENCOUNTER_COUNT";
CREATE TABLE "ENCOUNTER_COUNT" AS
    SELECT
        COUNT(*)
    FROM src.ENCOUNTERS;

DROP TABLE IF EXISTS "CATEGORY_COUNTS";
CREATE TABLE "CATEGORY_COUNTS" AS
    SELECT
        CARE_SETTING_CATEGORY AS CATEGORY,
        COUNT(DISTINCT STUDY_ID) AS UNIQUE_STUDY_IDS,
        COUNT(*) AS CATEGORY_TOTAL,
        COUNT(*) / CAST(COUNT(DISTINCT STUDY_ID) AS REAL) AS CATEGORY_AVERAGE
    FROM src.ENCOUNTERS
    GROUP BY CARE_SETTING_CATEGORY
    ORDER BY UNIQUE_STUDY_IDS;

DROP TABLE IF EXISTS "INSURANCE_COUNTS";
CREATE TABLE "INSURANCE_COUNTS" AS
    SELECT
        -- DATE('%Y', ADMIT_TIME) AS DATE,
        -- SUBSTR(ADMIT_TIME, 0, 5) AS DATE,
        strftime('%Y', ADMIT_TIME) || CASE 
            WHEN cast(strftime('%m', ADMIT_TIME) as integer) BETWEEN 1 AND 3 THEN '-01-01'
            WHEN cast(strftime('%m', ADMIT_TIME) as integer) BETWEEN 4 and 6 THEN '-04-01'
            WHEN cast(strftime('%m', ADMIT_TIME) as integer) BETWEEN 7 and 9 THEN '-07-01'
            ELSE '-10-01'
            END AS "PERIOD", -- Quarterly Period
        COUNT(*) AS TOTAL,
        SUM(COMMERCIAL_FLAG) AS COMMERCIAL,
        SUM(OTHERGOV_FLAG) AS OTHER_GOV,
        SUM(SELFPAY_FLAG) AS SELF_PAY,
        SUM(WORKERSCOMP_FLAG) AS WORKERS_COMP,
        SUM(INSTITUTIONALIZED_FLAG) AS INSTITUTIONALIZED,
        SUM(CHARITY_FLAG) AS CHARITY,
        SUM(MEDICARE_FLAG) AS MEDICARE,
        SUM(MEDICAID_FLAG) AS MEDICAID,
        SUM(NODATA_FLAG) AS NO_DATA
    FROM src.ENCOUNTERS
    GROUP BY PERIOD
    ORDER BY PERIOD;