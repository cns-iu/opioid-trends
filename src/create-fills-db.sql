-- Load Source Database --

ATTACH DATABASE 'raw-data/original/box-health/R2767_Data.db' AS src;
-- ATTACH DATABASE ':memory:' AS src;
-- .restore 'src' 'raw-data/original/box-health/R2767_Data.db';

DROP TABLE IF EXISTS "FILLS_AND_CHRONIC";
CREATE TABLE "FILLS_AND_CHRONIC" AS
  SELECT
    -- date(DX_DATE, 'start of month') AS "PERIOD", -- Monthly Period
    strftime('%Y', FILL_DATE) || CASE 
      WHEN cast(strftime('%m', FILL_DATE) as integer) BETWEEN 1 AND 3 THEN '-01-01'
      WHEN cast(strftime('%m', FILL_DATE) as integer) BETWEEN 4 and 6 THEN '-04-01'
      WHEN cast(strftime('%m', FILL_DATE) as integer) BETWEEN 7 and 9 THEN '-07-01'
      ELSE '-10-01'
    END AS "PERIOD", -- Quarterly Period
    STUDY_ID,
    DRUG_TYPE,
    IS_CHRONIC
  FROM src.FILLS
    JOIN CHRONIC USING(STUDY_ID)
  ORDER BY period;


-- Prescriptions data
DROP TABLE IF EXISTS "FILLS_AGG";
CREATE TABLE "FILLS_AGG" AS
  SELECT
    PERIOD,
    count(*) AS "N_OPIOID_PRESCRIPTIONS", -- O1 # opioid prescriptions
    count(DISTINCT STUDY_ID) AS "N_OPIOID_PRESCRIBERS" -- O2 # individuals with opioid prescriptions
  FROM FILLS_AND_CHRONIC
  GROUP BY period;

DROP TABLE IF EXISTS "FILLS_AGG_CHRONIC";
CREATE TABLE "FILLS_AGG_CHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_OPIOID_PRESCRIBERS_CHRONIC"
  FROM FILLS_AND_CHRONIC 
  WHERE IS_CHRONIC == 1
  GROUP BY period;

DROP TABLE IF EXISTS "FILLS_AGG_NONCHRONIC";
CREATE TABLE "FILLS_AGG_NONCHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_OPIOID_PRESCRIBERS_NONCHRONIC"
  FROM FILLS_AND_CHRONIC 
  WHERE IS_CHRONIC == 0
  GROUP BY period;


-- Anti-anxiety
DROP TABLE IF EXISTS "AGG_AA";
CREATE TABLE "AGG_AA" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AA"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AA'
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_AA_CHRONIC";
CREATE TABLE "AGG_AA_CHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AA_CHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AA' AND IS_CHRONIC == 1
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_AA_NONCHRONIC";
CREATE TABLE "AGG_AA_NONCHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AA_NONCHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AA' AND IS_CHRONIC == 0
  GROUP BY period;


-- Anti-depressant
DROP TABLE IF EXISTS "AGG_AD";
CREATE TABLE "AGG_AD" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AD"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AD'
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_AD_CHRONIC";
CREATE TABLE "AGG_AD_CHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AD_CHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AD' AND IS_CHRONIC == 1
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_AD_NONCHRONIC";
CREATE TABLE "AGG_AD_NONCHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_AD_NONCHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'AD' AND IS_CHRONIC == 0
  GROUP BY period;


-- Neurological agent
DROP TABLE IF EXISTS "AGG_NEURO";
CREATE TABLE "AGG_NEURO" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_NEURO"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'NEURO'
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_NEURO_CHRONIC";
CREATE TABLE "AGG_NEURO_CHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_NEURO_CHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'NEURO' AND IS_CHRONIC == 1
  GROUP BY period;

DROP TABLE IF EXISTS "AGG_NEURO_NONCHRONIC";
CREATE TABLE "AGG_NEURO_NONCHRONIC" AS
  SELECT
    PERIOD,
    count(DISTINCT STUDY_ID) AS "N_NEURO_NONCHRONIC"
  FROM FILLS_AND_CHRONIC
  WHERE DRUG_TYPE == 'NEURO' AND IS_CHRONIC == 0
  GROUP BY period;

-- Aggregate view
DROP TABLE IF EXISTS "ALL_AGGREGATES";
CREATE TABLE "ALL_AGGREGATES" AS
  SELECT *
  FROM
    FILLS_AGG AS F
    LEFT JOIN FILLS_AGG_CHRONIC USING(period)
    LEFT JOIN FILLS_AGG_NONCHRONIC USING(period)
    LEFT JOIN AGG_AA USING(period)
    LEFT JOIN AGG_AA_CHRONIC USING(period)
    LEFT JOIN AGG_AA_NONCHRONIC USING(period)
    LEFT JOIN AGG_AD USING(period)
    LEFT JOIN AGG_AD_CHRONIC USING(period)
    LEFT JOIN AGG_AD_NONCHRONIC USING(period)
    LEFT JOIN AGG_NEURO USING(period)
    LEFT JOIN AGG_NEURO_CHRONIC USING(period)
    LEFT JOIN AGG_NEURO_NONCHRONIC USING(period)
  WHERE cast(strftime('%Y', F.period) as integer) <= 2018 AND cast(strftime('%Y', F.period) as integer) >= 2009;

DROP TABLE IF EXISTS "ALL_AGGREGATES_ROW_BASED";
CREATE TABLE "ALL_AGGREGATES_ROW_BASED" AS
  SELECT * FROM (
-- Anti-anxiety
    SELECT
      PERIOD,
      'All' as "COHORT",
      'Anti-anxiety' AS "DATA_VARIABLE",
      N_AA as "VALUE",
      N_OPIOID_PRESCRIBERS AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Chronic' as "COHORT",
      'Anti-anxiety' AS "DATA_VARIABLE",
      N_AA_CHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_CHRONIC AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Non-chronic' as "COHORT",
      'Anti-anxiety' AS "DATA_VARIABLE",
      N_AA_NONCHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_NONCHRONIC AS "TOTAL"
  FROM ALL_AGGREGATES
-- Antidepressant
  UNION ALL
    SELECT
      PERIOD,
      'All' as "COHORT",
      'Antidepressant' AS "DATA_VARIABLE",
      N_AD AS "VALUE",
      N_OPIOID_PRESCRIBERS AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Chronic' as "COHORT",
      'Antidepressant' AS "DATA_VARIABLE",
      N_AD_CHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_CHRONIC AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Non-chronic' as "COHORT",
      'Antidepressant' AS "DATA_VARIABLE",
      N_AD_NONCHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_NONCHRONIC AS "TOTAL"
    FROM ALL_AGGREGATES
-- Neuro
  UNION ALL
    SELECT
      PERIOD,
      'All' as "COHORT",
      'Neuro' AS "DATA_VARIABLE",
      N_NEURO AS "VALUE",
      N_OPIOID_PRESCRIBERS AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Chronic' as "COHORT",
      'Neuro' AS "DATA_VARIABLE",
      N_NEURO_CHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_CHRONIC AS "TOTAL"
    FROM ALL_AGGREGATES
  UNION ALL
    SELECT
      PERIOD,
      'Non-chronic' as "COHORT",
      'Neuro' AS "DATA_VARIABLE",
      N_NEURO_NONCHRONIC AS "VALUE",
      N_OPIOID_PRESCRIBERS_NONCHRONIC AS "TOTAL"
    FROM ALL_AGGREGATES
  ) AS A
  WHERE cast(strftime('%Y', PERIOD) as integer) <= 2018 AND cast(strftime('%Y', PERIOD) as integer) >= 2009
  ORDER BY data_variable;